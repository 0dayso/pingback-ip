//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.239
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 
namespace Jiandanbao
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "MyWebServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class MyWebService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback DataCheckOperationCompleted;

        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;

        private System.Threading.SendOrPostCallback CheckReplyOperationCompleted;

        /// <remarks/>
        public MyWebService()
        {
            this.Url = "http://test.jiandanbao.com:5555/MyWebService.asmx";
        }

        /// <remarks/>
        public event DataCheckCompletedEventHandler DataCheckCompleted;

        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;

        /// <remarks/>
        public event CheckReplyCompletedEventHandler CheckReplyCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DataCheck", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DataCheck(string CardID, string Telephone, string areType)
        {
            object[] results = this.Invoke("DataCheck", new object[] {
                        CardID,
                        Telephone,
                        areType});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDataCheck(string CardID, string Telephone, string areType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DataCheck", new object[] {
                        CardID,
                        Telephone,
                        areType}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndDataCheck(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void DataCheckAsync(string CardID, string Telephone, string areType)
        {
            this.DataCheckAsync(CardID, Telephone, areType, null);
        }

        /// <remarks/>
        public void DataCheckAsync(string CardID, string Telephone, string areType, object userState)
        {
            if ((this.DataCheckOperationCompleted == null))
            {
                this.DataCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataCheckOperationCompleted);
            }
            this.InvokeAsync("DataCheck", new object[] {
                        CardID,
                        Telephone,
                        areType}, this.DataCheckOperationCompleted, userState);
        }

        private void OnDataCheckOperationCompleted(object arg)
        {
            if ((this.DataCheckCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataCheckCompleted(this, new DataCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendSMS(string Telephone)
        {
            object[] results = this.Invoke("SendSMS", new object[] {
                        Telephone});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendSMS(string Telephone, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendSMS", new object[] {
                        Telephone}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndSendSMS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void SendSMSAsync(string Telephone)
        {
            this.SendSMSAsync(Telephone, null);
        }

        /// <remarks/>
        public void SendSMSAsync(string Telephone, object userState)
        {
            if ((this.SendSMSOperationCompleted == null))
            {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        Telephone}, this.SendSMSOperationCompleted, userState);
        }

        private void OnSendSMSOperationCompleted(object arg)
        {
            if ((this.SendSMSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckReply", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckReply(string Telephone, string ValidCode)
        {
            object[] results = this.Invoke("CheckReply", new object[] {
                        Telephone,
                        ValidCode});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCheckReply(string Telephone, string ValidCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CheckReply", new object[] {
                        Telephone,
                        ValidCode}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCheckReply(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CheckReplyAsync(string Telephone, string ValidCode)
        {
            this.CheckReplyAsync(Telephone, ValidCode, null);
        }

        /// <remarks/>
        public void CheckReplyAsync(string Telephone, string ValidCode, object userState)
        {
            if ((this.CheckReplyOperationCompleted == null))
            {
                this.CheckReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckReplyOperationCompleted);
            }
            this.InvokeAsync("CheckReply", new object[] {
                        Telephone,
                        ValidCode}, this.CheckReplyOperationCompleted, userState);
        }

        private void OnCheckReplyOperationCompleted(object arg)
        {
            if ((this.CheckReplyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckReplyCompleted(this, new CheckReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void DataCheckCompletedEventHandler(object sender, DataCheckCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DataCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void CheckReplyCompletedEventHandler(object sender, CheckReplyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CheckReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
