//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 
namespace ShangTong
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SmsServiceHttpBinding", Namespace="http://send.sms.liming.com")]
    public partial class SmsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPackageFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback send3OperationCompleted;
        
        private System.Threading.SendOrPostCallback send2OperationCompleted;
        
        private System.Threading.SendOrPostCallback sendSmsByUCOperationCompleted;
        
        private System.Threading.SendOrPostCallback send4OperationCompleted;
        
        /// <remarks/>
        public SmsService()
        {
            this.Url = "http://219.133.59.215:8686/WebServiceServer/services/SmsService";
        }
        
        /// <remarks/>
        public event getStatusCompletedEventHandler getStatusCompleted;
        
        /// <remarks/>
        public event getBalanceCompletedEventHandler getBalanceCompleted;
        
        /// <remarks/>
        public event sendCompletedEventHandler sendCompleted;
        
        /// <remarks/>
        public event getPackageFormatCompletedEventHandler getPackageFormatCompleted;
        
        /// <remarks/>
        public event send3CompletedEventHandler send3Completed;
        
        /// <remarks/>
        public event send2CompletedEventHandler send2Completed;
        
        /// <remarks/>
        public event sendSmsByUCCompletedEventHandler sendSmsByUCCompleted;
        
        /// <remarks/>
        public event send4CompletedEventHandler send4Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public StatusDO getStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            object[] results = this.Invoke("getStatus", new object[] {
                        in0,
                        in1});
            return ((StatusDO)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetStatus(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getStatus", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public StatusDO EndgetStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((StatusDO)(results[0]));
        }
        
        /// <remarks/>
        public void getStatusAsync(string in0, string in1) {
            this.getStatusAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void getStatusAsync(string in0, string in1, object userState) {
            if ((this.getStatusOperationCompleted == null)) {
                this.getStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusOperationCompleted);
            }
            this.InvokeAsync("getStatus", new object[] {
                        in0,
                        in1}, this.getStatusOperationCompleted, userState);
        }
        
        private void OngetStatusOperationCompleted(object arg) {
            if ((this.getStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatusCompleted(this, new getStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getBalance([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            object[] results = this.Invoke("getBalance", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetBalance(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getBalance", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetBalance(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getBalanceAsync(string in0, string in1) {
            this.getBalanceAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void getBalanceAsync(string in0, string in1, object userState) {
            if ((this.getBalanceOperationCompleted == null)) {
                this.getBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBalanceOperationCompleted);
            }
            this.InvokeAsync("getBalance", new object[] {
                        in0,
                        in1}, this.getBalanceOperationCompleted, userState);
        }
        
        private void OngetBalanceOperationCompleted(object arg) {
            if ((this.getBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBalanceCompleted(this, new getBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string send([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in4, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in5) {
            object[] results = this.Invoke("send", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginsend(string in0, string in1, string in2, string in3, string in4, string in5, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("send", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endsend(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendAsync(string in0, string in1, string in2, string in3, string in4, string in5) {
            this.sendAsync(in0, in1, in2, in3, in4, in5, null);
        }
        
        /// <remarks/>
        public void sendAsync(string in0, string in1, string in2, string in3, string in4, string in5, object userState) {
            if ((this.sendOperationCompleted == null)) {
                this.sendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendOperationCompleted);
            }
            this.InvokeAsync("send", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5}, this.sendOperationCompleted, userState);
        }
        
        private void OnsendOperationCompleted(object arg) {
            if ((this.sendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendCompleted(this, new sendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getPackageFormat([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1) {
            object[] results = this.Invoke("getPackageFormat", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPackageFormat(string in0, string in1, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPackageFormat", new object[] {
                        in0,
                        in1}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetPackageFormat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPackageFormatAsync(string in0, string in1) {
            this.getPackageFormatAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void getPackageFormatAsync(string in0, string in1, object userState) {
            if ((this.getPackageFormatOperationCompleted == null)) {
                this.getPackageFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPackageFormatOperationCompleted);
            }
            this.InvokeAsync("getPackageFormat", new object[] {
                        in0,
                        in1}, this.getPackageFormatOperationCompleted, userState);
        }
        
        private void OngetPackageFormatOperationCompleted(object arg) {
            if ((this.getPackageFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPackageFormatCompleted(this, new getPackageFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string send3([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://entity.send.sms.liming.com")] MessageDO[] in3) {
            object[] results = this.Invoke("send3", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginsend3(string in0, string in1, string in2, MessageDO[] in3, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("send3", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endsend3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void send3Async(string in0, string in1, string in2, MessageDO[] in3) {
            this.send3Async(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void send3Async(string in0, string in1, string in2, MessageDO[] in3, object userState) {
            if ((this.send3OperationCompleted == null)) {
                this.send3OperationCompleted = new System.Threading.SendOrPostCallback(this.Onsend3OperationCompleted);
            }
            this.InvokeAsync("send3", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.send3OperationCompleted, userState);
        }
        
        private void Onsend3OperationCompleted(object arg) {
            if ((this.send3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.send3Completed(this, new send3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string send2([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://entity.send.sms.liming.com")] MessageDO[] in2) {
            object[] results = this.Invoke("send2", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginsend2(string in0, string in1, MessageDO[] in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("send2", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endsend2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void send2Async(string in0, string in1, MessageDO[] in2) {
            this.send2Async(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void send2Async(string in0, string in1, MessageDO[] in2, object userState) {
            if ((this.send2OperationCompleted == null)) {
                this.send2OperationCompleted = new System.Threading.SendOrPostCallback(this.Onsend2OperationCompleted);
            }
            this.InvokeAsync("send2", new object[] {
                        in0,
                        in1,
                        in2}, this.send2OperationCompleted, userState);
        }
        
        private void Onsend2OperationCompleted(object arg) {
            if ((this.send2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.send2Completed(this, new send2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string sendSmsByUC([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://entity.send.sms.liming.com")] MessageUcDO[] in2) {
            object[] results = this.Invoke("sendSmsByUC", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsendSmsByUC(string in0, string in1, MessageUcDO[] in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("sendSmsByUC", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsendSmsByUC(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendSmsByUCAsync(string in0, string in1, MessageUcDO[] in2) {
            this.sendSmsByUCAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void sendSmsByUCAsync(string in0, string in1, MessageUcDO[] in2, object userState) {
            if ((this.sendSmsByUCOperationCompleted == null)) {
                this.sendSmsByUCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendSmsByUCOperationCompleted);
            }
            this.InvokeAsync("sendSmsByUC", new object[] {
                        in0,
                        in1,
                        in2}, this.sendSmsByUCOperationCompleted, userState);
        }
        
        private void OnsendSmsByUCOperationCompleted(object arg) {
            if ((this.sendSmsByUCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendSmsByUCCompleted(this, new sendSmsByUCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://send.sms.liming.com", ResponseNamespace="http://send.sms.liming.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string send4([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://entity.send.sms.liming.com")] MessageDO[] in2) {
            object[] results = this.Invoke("send4", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginsend4(string in0, string in1, MessageDO[] in2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("send4", new object[] {
                        in0,
                        in1,
                        in2}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endsend4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void send4Async(string in0, string in1, MessageDO[] in2) {
            this.send4Async(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void send4Async(string in0, string in1, MessageDO[] in2, object userState) {
            if ((this.send4OperationCompleted == null)) {
                this.send4OperationCompleted = new System.Threading.SendOrPostCallback(this.Onsend4OperationCompleted);
            }
            this.InvokeAsync("send4", new object[] {
                        in0,
                        in1,
                        in2}, this.send4OperationCompleted, userState);
        }
        
        private void Onsend4OperationCompleted(object arg) {
            if ((this.send4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.send4Completed(this, new send4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://entity.send.sms.liming.com")]
    public partial class StatusDO {
        
        private int falseCountField;
        
        private bool falseCountFieldSpecified;
        
        private string[] falseIDsField;
        
        private int successCountField;
        
        private bool successCountFieldSpecified;
        
        private string[] successIDsField;
        
        /// <remarks/>
        public int falseCount {
            get {
                return this.falseCountField;
            }
            set {
                this.falseCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool falseCountSpecified {
            get {
                return this.falseCountFieldSpecified;
            }
            set {
                this.falseCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://send.sms.liming.com")]
        public string[] falseIDs {
            get {
                return this.falseIDsField;
            }
            set {
                this.falseIDsField = value;
            }
        }
        
        /// <remarks/>
        public int successCount {
            get {
                return this.successCountField;
            }
            set {
                this.successCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool successCountSpecified {
            get {
                return this.successCountFieldSpecified;
            }
            set {
                this.successCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://send.sms.liming.com")]
        public string[] successIDs {
            get {
                return this.successIDsField;
            }
            set {
                this.successIDsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://entity.send.sms.liming.com")]
    public partial class MessageUcDO {
        
        private string batchIDField;
        
        private string contentField;
        
        private string mobileField;
        
        private string remoteIDField;
        
        private string subUserIDField;
        
        private string ucCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string batchID {
            get {
                return this.batchIDField;
            }
            set {
                this.batchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string remoteID {
            get {
                return this.remoteIDField;
            }
            set {
                this.remoteIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subUserID {
            get {
                return this.subUserIDField;
            }
            set {
                this.subUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ucCode {
            get {
                return this.ucCodeField;
            }
            set {
                this.ucCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://entity.send.sms.liming.com")]
    public partial class MessageDO {
        
        private string batchIDField;
        
        private string contentField;
        
        private string mobileField;
        
        private string remoteIDField;
        
        private string subUserIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string batchID {
            get {
                return this.batchIDField;
            }
            set {
                this.batchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string remoteID {
            get {
                return this.remoteIDField;
            }
            set {
                this.remoteIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string subUserID {
            get {
                return this.subUserIDField;
            }
            set {
                this.subUserIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getStatusCompletedEventHandler(object sender, getStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusDO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusDO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getBalanceCompletedEventHandler(object sender, getBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void sendCompletedEventHandler(object sender, sendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPackageFormatCompletedEventHandler(object sender, getPackageFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPackageFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPackageFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void send3CompletedEventHandler(object sender, send3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class send3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal send3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void send2CompletedEventHandler(object sender, send2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class send2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal send2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void sendSmsByUCCompletedEventHandler(object sender, sendSmsByUCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendSmsByUCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendSmsByUCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void send4CompletedEventHandler(object sender, send4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class send4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal send4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
