//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=2.0.50727.1432。
// 
namespace WebService2
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "IBECOMPortBinding", Namespace = "http://ibe.eg.com/")]
    public partial class IBECOMService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback MakeEbtOrderOperationCompleted;

        private System.Threading.SendOrPostCallback getAVOperationCompleted;

        private System.Threading.SendOrPostCallback getFDWSOperationCompleted;

        private System.Threading.SendOrPostCallback getPriceOperationCompleted;

        private System.Threading.SendOrPostCallback wsRT2OperationCompleted;

        private System.Threading.SendOrPostCallback delPnrOperationCompleted;

        private System.Threading.SendOrPostCallback MakeOrderOperationCompleted;

        private System.Threading.SendOrPostCallback getRtOperationCompleted;

        private System.Threading.SendOrPostCallback getAFlightInfoOperationCompleted;

        private System.Threading.SendOrPostCallback getRtInfoOperationCompleted;

        /// <remarks/>
        public IBECOMService()
        {
            this.Url = "http://61.152.93.177:8088/EgIBE/IBECOM";
        }

        /// <remarks/>
        public event MakeEbtOrderCompletedEventHandler MakeEbtOrderCompleted;

        /// <remarks/>
        public event getAVCompletedEventHandler getAVCompleted;

        /// <remarks/>
        public event getFDWSCompletedEventHandler getFDWSCompleted;

        /// <remarks/>
        public event getPriceCompletedEventHandler getPriceCompleted;

        /// <remarks/>
        public event wsRT2CompletedEventHandler wsRT2Completed;

        /// <remarks/>
        public event delPnrCompletedEventHandler delPnrCompleted;

        /// <remarks/>
        public event MakeOrderCompletedEventHandler MakeOrderCompleted;

        /// <remarks/>
        public event getRtCompletedEventHandler getRtCompleted;

        /// <remarks/>
        public event getAFlightInfoCompletedEventHandler getAFlightInfoCompleted;

        /// <remarks/>
        public event getRtInfoCompletedEventHandler getRtInfoCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MakeEbtOrder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("MakeEbtOrder", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMakeEbtOrder(string arg0, string arg1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MakeEbtOrder", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMakeEbtOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MakeEbtOrderAsync(string arg0, string arg1)
        {
            this.MakeEbtOrderAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void MakeEbtOrderAsync(string arg0, string arg1, object userState)
        {
            if ((this.MakeEbtOrderOperationCompleted == null))
            {
                this.MakeEbtOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeEbtOrderOperationCompleted);
            }
            this.InvokeAsync("MakeEbtOrder", new object[] {
                        arg0,
                        arg1}, this.MakeEbtOrderOperationCompleted, userState);
        }

        private void OnMakeEbtOrderOperationCompleted(object arg)
        {
            if ((this.MakeEbtOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeEbtOrderCompleted(this, new MakeEbtOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAV([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4)
        {
            object[] results = this.Invoke("getAV", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetAV(string arg0, string arg1, string arg2, string arg3, string arg4, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getAV", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetAV(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getAVAsync(string arg0, string arg1, string arg2, string arg3, string arg4)
        {
            this.getAVAsync(arg0, arg1, arg2, arg3, arg4, null);
        }

        /// <remarks/>
        public void getAVAsync(string arg0, string arg1, string arg2, string arg3, string arg4, object userState)
        {
            if ((this.getAVOperationCompleted == null))
            {
                this.getAVOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAVOperationCompleted);
            }
            this.InvokeAsync("getAV", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4}, this.getAVOperationCompleted, userState);
        }

        private void OngetAVOperationCompleted(object arg)
        {
            if ((this.getAVCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAVCompleted(this, new getAVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getFDWS([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3)
        {
            object[] results = this.Invoke("getFDWS", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetFDWS(string arg0, string arg1, string arg2, string arg3, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getFDWS", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetFDWS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getFDWSAsync(string arg0, string arg1, string arg2, string arg3)
        {
            this.getFDWSAsync(arg0, arg1, arg2, arg3, null);
        }

        /// <remarks/>
        public void getFDWSAsync(string arg0, string arg1, string arg2, string arg3, object userState)
        {
            if ((this.getFDWSOperationCompleted == null))
            {
                this.getFDWSOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFDWSOperationCompleted);
            }
            this.InvokeAsync("getFDWS", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3}, this.getFDWSOperationCompleted, userState);
        }

        private void OngetFDWSOperationCompleted(object arg)
        {
            if ((this.getFDWSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFDWSCompleted(this, new getFDWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPrice([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5)
        {
            object[] results = this.Invoke("getPrice", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetPrice(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPrice", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetPrice(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getPriceAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5)
        {
            this.getPriceAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }

        /// <remarks/>
        public void getPriceAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState)
        {
            if ((this.getPriceOperationCompleted == null))
            {
                this.getPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPriceOperationCompleted);
            }
            this.InvokeAsync("getPrice", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.getPriceOperationCompleted, userState);
        }

        private void OngetPriceOperationCompleted(object arg)
        {
            if ((this.getPriceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPriceCompleted(this, new getPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string wsRT2([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("wsRT2", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginwsRT2(string arg0, string arg1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("wsRT2", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }

        /// <remarks/>
        public string EndwsRT2(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void wsRT2Async(string arg0, string arg1)
        {
            this.wsRT2Async(arg0, arg1, null);
        }

        /// <remarks/>
        public void wsRT2Async(string arg0, string arg1, object userState)
        {
            if ((this.wsRT2OperationCompleted == null))
            {
                this.wsRT2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnwsRT2OperationCompleted);
            }
            this.InvokeAsync("wsRT2", new object[] {
                        arg0,
                        arg1}, this.wsRT2OperationCompleted, userState);
        }

        private void OnwsRT2OperationCompleted(object arg)
        {
            if ((this.wsRT2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wsRT2Completed(this, new wsRT2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delPnr([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("delPnr", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindelPnr(string arg0, string arg1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("delPnr", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }

        /// <remarks/>
        public string EnddelPnr(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void delPnrAsync(string arg0, string arg1)
        {
            this.delPnrAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void delPnrAsync(string arg0, string arg1, object userState)
        {
            if ((this.delPnrOperationCompleted == null))
            {
                this.delPnrOperationCompleted = new System.Threading.SendOrPostCallback(this.OndelPnrOperationCompleted);
            }
            this.InvokeAsync("delPnr", new object[] {
                        arg0,
                        arg1}, this.delPnrOperationCompleted, userState);
        }

        private void OndelPnrOperationCompleted(object arg)
        {
            if ((this.delPnrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delPnrCompleted(this, new delPnrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string MakeOrder([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("MakeOrder", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginMakeOrder(string arg0, string arg1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("MakeOrder", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }

        /// <remarks/>
        public string EndMakeOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void MakeOrderAsync(string arg0, string arg1)
        {
            this.MakeOrderAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void MakeOrderAsync(string arg0, string arg1, object userState)
        {
            if ((this.MakeOrderOperationCompleted == null))
            {
                this.MakeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeOrderOperationCompleted);
            }
            this.InvokeAsync("MakeOrder", new object[] {
                        arg0,
                        arg1}, this.MakeOrderOperationCompleted, userState);
        }

        private void OnMakeOrderOperationCompleted(object arg)
        {
            if ((this.MakeOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeOrderCompleted(this, new MakeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getRt([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getRt", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetRt(string arg0, string arg1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getRt", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetRt(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getRtAsync(string arg0, string arg1)
        {
            this.getRtAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getRtAsync(string arg0, string arg1, object userState)
        {
            if ((this.getRtOperationCompleted == null))
            {
                this.getRtOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRtOperationCompleted);
            }
            this.InvokeAsync("getRt", new object[] {
                        arg0,
                        arg1}, this.getRtOperationCompleted, userState);
        }

        private void OngetRtOperationCompleted(object arg)
        {
            if ((this.getRtCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRtCompleted(this, new getRtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getAFlightInfo([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg4, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg5)
        {
            object[] results = this.Invoke("getAFlightInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetAFlightInfo(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getAFlightInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetAFlightInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getAFlightInfoAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5)
        {
            this.getAFlightInfoAsync(arg0, arg1, arg2, arg3, arg4, arg5, null);
        }

        /// <remarks/>
        public void getAFlightInfoAsync(string arg0, string arg1, string arg2, string arg3, string arg4, string arg5, object userState)
        {
            if ((this.getAFlightInfoOperationCompleted == null))
            {
                this.getAFlightInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAFlightInfoOperationCompleted);
            }
            this.InvokeAsync("getAFlightInfo", new object[] {
                        arg0,
                        arg1,
                        arg2,
                        arg3,
                        arg4,
                        arg5}, this.getAFlightInfoOperationCompleted, userState);
        }

        private void OngetAFlightInfoOperationCompleted(object arg)
        {
            if ((this.getAFlightInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAFlightInfoCompleted(this, new getAFlightInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://ibe.eg.com/", ResponseNamespace = "http://ibe.eg.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getRtInfo([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1)
        {
            object[] results = this.Invoke("getRtInfo", new object[] {
                        arg0,
                        arg1});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetRtInfo(string arg0, string arg1, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getRtInfo", new object[] {
                        arg0,
                        arg1}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetRtInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getRtInfoAsync(string arg0, string arg1)
        {
            this.getRtInfoAsync(arg0, arg1, null);
        }

        /// <remarks/>
        public void getRtInfoAsync(string arg0, string arg1, object userState)
        {
            if ((this.getRtInfoOperationCompleted == null))
            {
                this.getRtInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRtInfoOperationCompleted);
            }
            this.InvokeAsync("getRtInfo", new object[] {
                        arg0,
                        arg1}, this.getRtInfoOperationCompleted, userState);
        }

        private void OngetRtInfoOperationCompleted(object arg)
        {
            if ((this.getRtInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRtInfoCompleted(this, new getRtInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void MakeEbtOrderCompletedEventHandler(object sender, MakeEbtOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeEbtOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MakeEbtOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void getAVCompletedEventHandler(object sender, getAVCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void getFDWSCompletedEventHandler(object sender, getFDWSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFDWSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getFDWSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void getPriceCompletedEventHandler(object sender, getPriceCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void wsRT2CompletedEventHandler(object sender, wsRT2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wsRT2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal wsRT2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void delPnrCompletedEventHandler(object sender, delPnrCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class delPnrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal delPnrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void MakeOrderCompletedEventHandler(object sender, MakeOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal MakeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void getRtCompletedEventHandler(object sender, getRtCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void getAFlightInfoCompletedEventHandler(object sender, getAFlightInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAFlightInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAFlightInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void getRtInfoCompletedEventHandler(object sender, getRtInfoCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRtInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRtInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
