//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=2.0.50727.1432。
// 
namespace EagleWebService
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "TicketWebServiceSoap", Namespace = "http://ticket.org/")]
    public partial class wsYzpbtoc : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback A_Version_WS_XMLSchemaOperationCompleted;

        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;

        private System.Threading.SendOrPostCallback CanCreateNewOrderOperationCompleted;

        private System.Threading.SendOrPostCallback IsUserExistOperationCompleted;

        private System.Threading.SendOrPostCallback GetClearUsersOperationCompleted;

        private System.Threading.SendOrPostCallback NewTicketsOrderOperationCompleted;

        private System.Threading.SendOrPostCallback GetTicketOrderOperationCompleted;

        private System.Threading.SendOrPostCallback GetInsuranceTypeOperationCompleted;

        private System.Threading.SendOrPostCallback GetDeliveryTypeOperationCompleted;

        private System.Threading.SendOrPostCallback GetOperateTypeOperationCompleted;

        private System.Threading.SendOrPostCallback GetPaymentTypeOperationCompleted;

        private System.Threading.SendOrPostCallback GetAirportOrSaleroomsOperationCompleted;

        private System.Threading.SendOrPostCallback GetCustomerByPhoneOperationCompleted;

        private System.Threading.SendOrPostCallback GetCustomerByIDOperationCompleted;

        private System.Threading.SendOrPostCallback NewCustomer2OperationCompleted;

        private System.Threading.SendOrPostCallback NewCustomerOperationCompleted;

        private System.Threading.SendOrPostCallback GetVIPcardToUserIDOperationCompleted;

        private System.Threading.SendOrPostCallback GetUserIDToVIPcardOperationCompleted;

        private System.Threading.SendOrPostCallback InputCustomerQueryOperationCompleted;

        private System.Threading.SendOrPostCallback GetCustomerQueryOperationCompleted;

        private System.Threading.SendOrPostCallback GetCustomerByNameOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrganizationCustomersOperationCompleted;

        private System.Threading.SendOrPostCallback AddPassengerOperationCompleted;

        private System.Threading.SendOrPostCallback PaymentAmountOperationCompleted;

        private System.Threading.SendOrPostCallback GetOrderIdOperationCompleted;

        private System.Threading.SendOrPostCallback PaymentCheckedOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;

        /// <summary>
        /// 192.168.1.210/AirLineTicket(两头不需要'/')
        /// </summary>
        /// <param name="head">"http://" + head + "/WebServices/webservices.asmx"</param>
        public wsYzpbtoc(string head)
        {
            this.Url = "http://" + head + "/WebServices/webservices.asmx";
        }
        /// <summary>
        /// 2.0版中不使用该构造
        /// </summary>
        public wsYzpbtoc()
        {
            this.Url = Options.GlobalVar.B2CURL + "/WebServices/webservices.asmx";
        }

        /// <remarks/>
        public event A_Version_WS_XMLSchemaCompletedEventHandler A_Version_WS_XMLSchemaCompleted;

        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;

        /// <remarks/>
        public event CanCreateNewOrderCompletedEventHandler CanCreateNewOrderCompleted;

        /// <remarks/>
        public event IsUserExistCompletedEventHandler IsUserExistCompleted;

        /// <remarks/>
        public event GetClearUsersCompletedEventHandler GetClearUsersCompleted;

        /// <remarks/>
        public event NewTicketsOrderCompletedEventHandler NewTicketsOrderCompleted;

        /// <remarks/>
        public event GetTicketOrderCompletedEventHandler GetTicketOrderCompleted;

        /// <remarks/>
        public event GetInsuranceTypeCompletedEventHandler GetInsuranceTypeCompleted;

        /// <remarks/>
        public event GetDeliveryTypeCompletedEventHandler GetDeliveryTypeCompleted;

        /// <remarks/>
        public event GetOperateTypeCompletedEventHandler GetOperateTypeCompleted;

        /// <remarks/>
        public event GetPaymentTypeCompletedEventHandler GetPaymentTypeCompleted;

        /// <remarks/>
        public event GetAirportOrSaleroomsCompletedEventHandler GetAirportOrSaleroomsCompleted;

        /// <remarks/>
        public event GetCustomerByPhoneCompletedEventHandler GetCustomerByPhoneCompleted;

        /// <remarks/>
        public event GetCustomerByIDCompletedEventHandler GetCustomerByIDCompleted;

        /// <remarks/>
        public event NewCustomer2CompletedEventHandler NewCustomer2Completed;

        /// <remarks/>
        public event NewCustomerCompletedEventHandler NewCustomerCompleted;

        /// <remarks/>
        public event GetVIPcardToUserIDCompletedEventHandler GetVIPcardToUserIDCompleted;

        /// <remarks/>
        public event GetUserIDToVIPcardCompletedEventHandler GetUserIDToVIPcardCompleted;

        /// <remarks/>
        public event InputCustomerQueryCompletedEventHandler InputCustomerQueryCompleted;

        /// <remarks/>
        public event GetCustomerQueryCompletedEventHandler GetCustomerQueryCompleted;

        /// <remarks/>
        public event GetCustomerByNameCompletedEventHandler GetCustomerByNameCompleted;

        /// <remarks/>
        public event GetOrganizationCustomersCompletedEventHandler GetOrganizationCustomersCompleted;

        /// <remarks/>
        public event AddPassengerCompletedEventHandler AddPassengerCompleted;

        /// <remarks/>
        public event PaymentAmountCompletedEventHandler PaymentAmountCompleted;

        /// <remarks/>
        public event GetOrderIdCompletedEventHandler GetOrderIdCompleted;

        /// <remarks/>
        public event PaymentCheckedCompletedEventHandler PaymentCheckedCompleted;

        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/A_Version_WS_XMLSchema", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string A_Version_WS_XMLSchema()
        {
            object[] results = this.Invoke("A_Version_WS_XMLSchema", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginA_Version_WS_XMLSchema(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("A_Version_WS_XMLSchema", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndA_Version_WS_XMLSchema(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void A_Version_WS_XMLSchemaAsync()
        {
            this.A_Version_WS_XMLSchemaAsync(null);
        }

        /// <remarks/>
        public void A_Version_WS_XMLSchemaAsync(object userState)
        {
            if ((this.A_Version_WS_XMLSchemaOperationCompleted == null))
            {
                this.A_Version_WS_XMLSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnA_Version_WS_XMLSchemaOperationCompleted);
            }
            this.InvokeAsync("A_Version_WS_XMLSchema", new object[0], this.A_Version_WS_XMLSchemaOperationCompleted, userState);
        }

        private void OnA_Version_WS_XMLSchemaOperationCompleted(object arg)
        {
            if ((this.A_Version_WS_XMLSchemaCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.A_Version_WS_XMLSchemaCompleted(this, new A_Version_WS_XMLSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/UserLogin", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserLogin(string UserName, string Password)
        {
            object[] results = this.Invoke("UserLogin", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUserLogin(string UserName, string Password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UserLogin", new object[] {
                        UserName,
                        Password}, callback, asyncState);
        }

        /// <remarks/>
        public string EndUserLogin(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UserLoginAsync(string UserName, string Password)
        {
            this.UserLoginAsync(UserName, Password, null);
        }

        /// <remarks/>
        public void UserLoginAsync(string UserName, string Password, object userState)
        {
            if ((this.UserLoginOperationCompleted == null))
            {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        UserName,
                        Password}, this.UserLoginOperationCompleted, userState);
        }

        private void OnUserLoginOperationCompleted(object arg)
        {
            if ((this.UserLoginCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/CanCreateNewOrder", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CanCreateNewOrder(int operaterID)
        {
            object[] results = this.Invoke("CanCreateNewOrder", new object[] {
                        operaterID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCanCreateNewOrder(int operaterID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CanCreateNewOrder", new object[] {
                        operaterID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCanCreateNewOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CanCreateNewOrderAsync(int operaterID)
        {
            this.CanCreateNewOrderAsync(operaterID, null);
        }

        /// <remarks/>
        public void CanCreateNewOrderAsync(int operaterID, object userState)
        {
            if ((this.CanCreateNewOrderOperationCompleted == null))
            {
                this.CanCreateNewOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanCreateNewOrderOperationCompleted);
            }
            this.InvokeAsync("CanCreateNewOrder", new object[] {
                        operaterID}, this.CanCreateNewOrderOperationCompleted, userState);
        }

        private void OnCanCreateNewOrderOperationCompleted(object arg)
        {
            if ((this.CanCreateNewOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanCreateNewOrderCompleted(this, new CanCreateNewOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/IsUserExist", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserExist(string strUserName)
        {
            object[] results = this.Invoke("IsUserExist", new object[] {
                        strUserName});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIsUserExist(string strUserName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IsUserExist", new object[] {
                        strUserName}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndIsUserExist(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void IsUserExistAsync(string strUserName)
        {
            this.IsUserExistAsync(strUserName, null);
        }

        /// <remarks/>
        public void IsUserExistAsync(string strUserName, object userState)
        {
            if ((this.IsUserExistOperationCompleted == null))
            {
                this.IsUserExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserExistOperationCompleted);
            }
            this.InvokeAsync("IsUserExist", new object[] {
                        strUserName}, this.IsUserExistOperationCompleted, userState);
        }

        private void OnIsUserExistOperationCompleted(object arg)
        {
            if ((this.IsUserExistCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserExistCompleted(this, new IsUserExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetClearUsers", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClearUsers(int CorpID)
        {
            object[] results = this.Invoke("GetClearUsers", new object[] {
                        CorpID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetClearUsers(int CorpID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetClearUsers", new object[] {
                        CorpID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetClearUsers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetClearUsersAsync(int CorpID)
        {
            this.GetClearUsersAsync(CorpID, null);
        }

        /// <remarks/>
        public void GetClearUsersAsync(int CorpID, object userState)
        {
            if ((this.GetClearUsersOperationCompleted == null))
            {
                this.GetClearUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClearUsersOperationCompleted);
            }
            this.InvokeAsync("GetClearUsers", new object[] {
                        CorpID}, this.GetClearUsersOperationCompleted, userState);
        }

        private void OnGetClearUsersOperationCompleted(object arg)
        {
            if ((this.GetClearUsersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClearUsersCompleted(this, new GetClearUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/NewTicketsOrder", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NewTicketsOrder(string ValueXML, int OperateUserID, int ClearUserID)
        {
            object[] results = this.Invoke("NewTicketsOrder", new object[] {
                        ValueXML,
                        OperateUserID,
                        ClearUserID});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginNewTicketsOrder(string ValueXML, int OperateUserID, int ClearUserID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NewTicketsOrder", new object[] {
                        ValueXML,
                        OperateUserID,
                        ClearUserID}, callback, asyncState);
        }

        /// <remarks/>
        public int EndNewTicketsOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void NewTicketsOrderAsync(string ValueXML, int OperateUserID, int ClearUserID)
        {
            this.NewTicketsOrderAsync(ValueXML, OperateUserID, ClearUserID, null);
        }

        /// <remarks/>
        public void NewTicketsOrderAsync(string ValueXML, int OperateUserID, int ClearUserID, object userState)
        {
            if ((this.NewTicketsOrderOperationCompleted == null))
            {
                this.NewTicketsOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewTicketsOrderOperationCompleted);
            }
            this.InvokeAsync("NewTicketsOrder", new object[] {
                        ValueXML,
                        OperateUserID,
                        ClearUserID}, this.NewTicketsOrderOperationCompleted, userState);
        }

        private void OnNewTicketsOrderOperationCompleted(object arg)
        {
            if ((this.NewTicketsOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewTicketsOrderCompleted(this, new NewTicketsOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetTicketOrder", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTicketOrder(int OrderID)
        {
            object[] results = this.Invoke("GetTicketOrder", new object[] {
                        OrderID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetTicketOrder(int OrderID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetTicketOrder", new object[] {
                        OrderID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetTicketOrder(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetTicketOrderAsync(int OrderID)
        {
            this.GetTicketOrderAsync(OrderID, null);
        }

        /// <remarks/>
        public void GetTicketOrderAsync(int OrderID, object userState)
        {
            if ((this.GetTicketOrderOperationCompleted == null))
            {
                this.GetTicketOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketOrderOperationCompleted);
            }
            this.InvokeAsync("GetTicketOrder", new object[] {
                        OrderID}, this.GetTicketOrderOperationCompleted, userState);
        }

        private void OnGetTicketOrderOperationCompleted(object arg)
        {
            if ((this.GetTicketOrderCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketOrderCompleted(this, new GetTicketOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetInsuranceType", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInsuranceType()
        {
            object[] results = this.Invoke("GetInsuranceType", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInsuranceType(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInsuranceType", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetInsuranceType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetInsuranceTypeAsync()
        {
            this.GetInsuranceTypeAsync(null);
        }

        /// <remarks/>
        public void GetInsuranceTypeAsync(object userState)
        {
            if ((this.GetInsuranceTypeOperationCompleted == null))
            {
                this.GetInsuranceTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInsuranceTypeOperationCompleted);
            }
            this.InvokeAsync("GetInsuranceType", new object[0], this.GetInsuranceTypeOperationCompleted, userState);
        }

        private void OnGetInsuranceTypeOperationCompleted(object arg)
        {
            if ((this.GetInsuranceTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInsuranceTypeCompleted(this, new GetInsuranceTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetDeliveryType", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeliveryType()
        {
            object[] results = this.Invoke("GetDeliveryType", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetDeliveryType(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetDeliveryType", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetDeliveryType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetDeliveryTypeAsync()
        {
            this.GetDeliveryTypeAsync(null);
        }

        /// <remarks/>
        public void GetDeliveryTypeAsync(object userState)
        {
            if ((this.GetDeliveryTypeOperationCompleted == null))
            {
                this.GetDeliveryTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryTypeOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryType", new object[0], this.GetDeliveryTypeOperationCompleted, userState);
        }

        private void OnGetDeliveryTypeOperationCompleted(object arg)
        {
            if ((this.GetDeliveryTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryTypeCompleted(this, new GetDeliveryTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetOperateType", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOperateType()
        {
            object[] results = this.Invoke("GetOperateType", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOperateType(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOperateType", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOperateType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOperateTypeAsync()
        {
            this.GetOperateTypeAsync(null);
        }

        /// <remarks/>
        public void GetOperateTypeAsync(object userState)
        {
            if ((this.GetOperateTypeOperationCompleted == null))
            {
                this.GetOperateTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperateTypeOperationCompleted);
            }
            this.InvokeAsync("GetOperateType", new object[0], this.GetOperateTypeOperationCompleted, userState);
        }

        private void OnGetOperateTypeOperationCompleted(object arg)
        {
            if ((this.GetOperateTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOperateTypeCompleted(this, new GetOperateTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetPaymentType", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaymentType()
        {
            object[] results = this.Invoke("GetPaymentType", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPaymentType(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPaymentType", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetPaymentType(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetPaymentTypeAsync()
        {
            this.GetPaymentTypeAsync(null);
        }

        /// <remarks/>
        public void GetPaymentTypeAsync(object userState)
        {
            if ((this.GetPaymentTypeOperationCompleted == null))
            {
                this.GetPaymentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentTypeOperationCompleted);
            }
            this.InvokeAsync("GetPaymentType", new object[0], this.GetPaymentTypeOperationCompleted, userState);
        }

        private void OnGetPaymentTypeOperationCompleted(object arg)
        {
            if ((this.GetPaymentTypeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentTypeCompleted(this, new GetPaymentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetAirportOrSalerooms", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAirportOrSalerooms(int CorpID, int DepartmentKind)
        {
            object[] results = this.Invoke("GetAirportOrSalerooms", new object[] {
                        CorpID,
                        DepartmentKind});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAirportOrSalerooms(int CorpID, int DepartmentKind, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAirportOrSalerooms", new object[] {
                        CorpID,
                        DepartmentKind}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetAirportOrSalerooms(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetAirportOrSaleroomsAsync(int CorpID, int DepartmentKind)
        {
            this.GetAirportOrSaleroomsAsync(CorpID, DepartmentKind, null);
        }

        /// <remarks/>
        public void GetAirportOrSaleroomsAsync(int CorpID, int DepartmentKind, object userState)
        {
            if ((this.GetAirportOrSaleroomsOperationCompleted == null))
            {
                this.GetAirportOrSaleroomsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAirportOrSaleroomsOperationCompleted);
            }
            this.InvokeAsync("GetAirportOrSalerooms", new object[] {
                        CorpID,
                        DepartmentKind}, this.GetAirportOrSaleroomsOperationCompleted, userState);
        }

        private void OnGetAirportOrSaleroomsOperationCompleted(object arg)
        {
            if ((this.GetAirportOrSaleroomsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAirportOrSaleroomsCompleted(this, new GetAirportOrSaleroomsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetCustomerByPhone", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerByPhone(string Phone)
        {
            object[] results = this.Invoke("GetCustomerByPhone", new object[] {
                        Phone});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerByPhone(string Phone, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCustomerByPhone", new object[] {
                        Phone}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCustomerByPhone(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCustomerByPhoneAsync(string Phone)
        {
            this.GetCustomerByPhoneAsync(Phone, null);
        }

        /// <remarks/>
        public void GetCustomerByPhoneAsync(string Phone, object userState)
        {
            if ((this.GetCustomerByPhoneOperationCompleted == null))
            {
                this.GetCustomerByPhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByPhoneOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByPhone", new object[] {
                        Phone}, this.GetCustomerByPhoneOperationCompleted, userState);
        }

        private void OnGetCustomerByPhoneOperationCompleted(object arg)
        {
            if ((this.GetCustomerByPhoneCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByPhoneCompleted(this, new GetCustomerByPhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetCustomerByID", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerByID(int CustomerID)
        {
            object[] results = this.Invoke("GetCustomerByID", new object[] {
                        CustomerID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerByID(int CustomerID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCustomerByID", new object[] {
                        CustomerID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCustomerByID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCustomerByIDAsync(int CustomerID)
        {
            this.GetCustomerByIDAsync(CustomerID, null);
        }

        /// <remarks/>
        public void GetCustomerByIDAsync(int CustomerID, object userState)
        {
            if ((this.GetCustomerByIDOperationCompleted == null))
            {
                this.GetCustomerByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByIDOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByID", new object[] {
                        CustomerID}, this.GetCustomerByIDOperationCompleted, userState);
        }

        private void OnGetCustomerByIDOperationCompleted(object arg)
        {
            if ((this.GetCustomerByIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByIDCompleted(this, new GetCustomerByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/NewCustomer2", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NewCustomer2(string CustomerXML)
        {
            object[] results = this.Invoke("NewCustomer2", new object[] {
                        CustomerXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginNewCustomer2(string CustomerXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NewCustomer2", new object[] {
                        CustomerXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndNewCustomer2(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void NewCustomer2Async(string CustomerXML)
        {
            this.NewCustomer2Async(CustomerXML, null);
        }

        /// <remarks/>
        public void NewCustomer2Async(string CustomerXML, object userState)
        {
            if ((this.NewCustomer2OperationCompleted == null))
            {
                this.NewCustomer2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewCustomer2OperationCompleted);
            }
            this.InvokeAsync("NewCustomer2", new object[] {
                        CustomerXML}, this.NewCustomer2OperationCompleted, userState);
        }

        private void OnNewCustomer2OperationCompleted(object arg)
        {
            if ((this.NewCustomer2Completed != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewCustomer2Completed(this, new NewCustomer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/NewCustomer", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int NewCustomer(string CustomerXML)
        {
            object[] results = this.Invoke("NewCustomer", new object[] {
                        CustomerXML});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginNewCustomer(string CustomerXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NewCustomer", new object[] {
                        CustomerXML}, callback, asyncState);
        }

        /// <remarks/>
        public int EndNewCustomer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void NewCustomerAsync(string CustomerXML)
        {
            this.NewCustomerAsync(CustomerXML, null);
        }

        /// <remarks/>
        public void NewCustomerAsync(string CustomerXML, object userState)
        {
            if ((this.NewCustomerOperationCompleted == null))
            {
                this.NewCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewCustomerOperationCompleted);
            }
            this.InvokeAsync("NewCustomer", new object[] {
                        CustomerXML}, this.NewCustomerOperationCompleted, userState);
        }

        private void OnNewCustomerOperationCompleted(object arg)
        {
            if ((this.NewCustomerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewCustomerCompleted(this, new NewCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetVIPcardToUserID", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVIPcardToUserID(string _vipcard)
        {
            object[] results = this.Invoke("GetVIPcardToUserID", new object[] {
                        _vipcard});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetVIPcardToUserID(string _vipcard, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetVIPcardToUserID", new object[] {
                        _vipcard}, callback, asyncState);
        }

        /// <remarks/>
        public int EndGetVIPcardToUserID(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void GetVIPcardToUserIDAsync(string _vipcard)
        {
            this.GetVIPcardToUserIDAsync(_vipcard, null);
        }

        /// <remarks/>
        public void GetVIPcardToUserIDAsync(string _vipcard, object userState)
        {
            if ((this.GetVIPcardToUserIDOperationCompleted == null))
            {
                this.GetVIPcardToUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVIPcardToUserIDOperationCompleted);
            }
            this.InvokeAsync("GetVIPcardToUserID", new object[] {
                        _vipcard}, this.GetVIPcardToUserIDOperationCompleted, userState);
        }

        private void OnGetVIPcardToUserIDOperationCompleted(object arg)
        {
            if ((this.GetVIPcardToUserIDCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVIPcardToUserIDCompleted(this, new GetVIPcardToUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetUserIDToVIPcard", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserIDToVIPcard(int _userid)
        {
            object[] results = this.Invoke("GetUserIDToVIPcard", new object[] {
                        _userid});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUserIDToVIPcard(int _userid, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserIDToVIPcard", new object[] {
                        _userid}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetUserIDToVIPcard(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetUserIDToVIPcardAsync(int _userid)
        {
            this.GetUserIDToVIPcardAsync(_userid, null);
        }

        /// <remarks/>
        public void GetUserIDToVIPcardAsync(int _userid, object userState)
        {
            if ((this.GetUserIDToVIPcardOperationCompleted == null))
            {
                this.GetUserIDToVIPcardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDToVIPcardOperationCompleted);
            }
            this.InvokeAsync("GetUserIDToVIPcard", new object[] {
                        _userid}, this.GetUserIDToVIPcardOperationCompleted, userState);
        }

        private void OnGetUserIDToVIPcardOperationCompleted(object arg)
        {
            if ((this.GetUserIDToVIPcardCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDToVIPcardCompleted(this, new GetUserIDToVIPcardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/InputCustomerQuery", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InputCustomerQuery(string ValueXML)
        {
            object[] results = this.Invoke("InputCustomerQuery", new object[] {
                        ValueXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInputCustomerQuery(string ValueXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InputCustomerQuery", new object[] {
                        ValueXML}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndInputCustomerQuery(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void InputCustomerQueryAsync(string ValueXML)
        {
            this.InputCustomerQueryAsync(ValueXML, null);
        }

        /// <remarks/>
        public void InputCustomerQueryAsync(string ValueXML, object userState)
        {
            if ((this.InputCustomerQueryOperationCompleted == null))
            {
                this.InputCustomerQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInputCustomerQueryOperationCompleted);
            }
            this.InvokeAsync("InputCustomerQuery", new object[] {
                        ValueXML}, this.InputCustomerQueryOperationCompleted, userState);
        }

        private void OnInputCustomerQueryOperationCompleted(object arg)
        {
            if ((this.InputCustomerQueryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InputCustomerQueryCompleted(this, new InputCustomerQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetCustomerQuery", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerQuery(int CustomerID)
        {
            object[] results = this.Invoke("GetCustomerQuery", new object[] {
                        CustomerID});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerQuery(int CustomerID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCustomerQuery", new object[] {
                        CustomerID}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCustomerQuery(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCustomerQueryAsync(int CustomerID)
        {
            this.GetCustomerQueryAsync(CustomerID, null);
        }

        /// <remarks/>
        public void GetCustomerQueryAsync(int CustomerID, object userState)
        {
            if ((this.GetCustomerQueryOperationCompleted == null))
            {
                this.GetCustomerQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerQueryOperationCompleted);
            }
            this.InvokeAsync("GetCustomerQuery", new object[] {
                        CustomerID}, this.GetCustomerQueryOperationCompleted, userState);
        }

        private void OnGetCustomerQueryOperationCompleted(object arg)
        {
            if ((this.GetCustomerQueryCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerQueryCompleted(this, new GetCustomerQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetCustomerByName", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerByName(string Name)
        {
            object[] results = this.Invoke("GetCustomerByName", new object[] {
                        Name});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetCustomerByName(string Name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetCustomerByName", new object[] {
                        Name}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetCustomerByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetCustomerByNameAsync(string Name)
        {
            this.GetCustomerByNameAsync(Name, null);
        }

        /// <remarks/>
        public void GetCustomerByNameAsync(string Name, object userState)
        {
            if ((this.GetCustomerByNameOperationCompleted == null))
            {
                this.GetCustomerByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByNameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByName", new object[] {
                        Name}, this.GetCustomerByNameOperationCompleted, userState);
        }

        private void OnGetCustomerByNameOperationCompleted(object arg)
        {
            if ((this.GetCustomerByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByNameCompleted(this, new GetCustomerByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetOrganizationCustomers", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrganizationCustomers(string PartName)
        {
            object[] results = this.Invoke("GetOrganizationCustomers", new object[] {
                        PartName});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationCustomers(string PartName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrganizationCustomers", new object[] {
                        PartName}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrganizationCustomers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrganizationCustomersAsync(string PartName)
        {
            this.GetOrganizationCustomersAsync(PartName, null);
        }

        /// <remarks/>
        public void GetOrganizationCustomersAsync(string PartName, object userState)
        {
            if ((this.GetOrganizationCustomersOperationCompleted == null))
            {
                this.GetOrganizationCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationCustomersOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationCustomers", new object[] {
                        PartName}, this.GetOrganizationCustomersOperationCompleted, userState);
        }

        private void OnGetOrganizationCustomersOperationCompleted(object arg)
        {
            if ((this.GetOrganizationCustomersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationCustomersCompleted(this, new GetOrganizationCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/AddPassenger", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddPassenger(int customerID, string XMLValue)
        {
            object[] results = this.Invoke("AddPassenger", new object[] {
                        customerID,
                        XMLValue});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddPassenger(int customerID, string XMLValue, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddPassenger", new object[] {
                        customerID,
                        XMLValue}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddPassenger(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddPassengerAsync(int customerID, string XMLValue)
        {
            this.AddPassengerAsync(customerID, XMLValue, null);
        }

        /// <remarks/>
        public void AddPassengerAsync(int customerID, string XMLValue, object userState)
        {
            if ((this.AddPassengerOperationCompleted == null))
            {
                this.AddPassengerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPassengerOperationCompleted);
            }
            this.InvokeAsync("AddPassenger", new object[] {
                        customerID,
                        XMLValue}, this.AddPassengerOperationCompleted, userState);
        }

        private void OnAddPassengerOperationCompleted(object arg)
        {
            if ((this.AddPassengerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPassengerCompleted(this, new AddPassengerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/PaymentAmount", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PaymentAmount(string phoneNumber)
        {
            object[] results = this.Invoke("PaymentAmount", new object[] {
                        phoneNumber});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPaymentAmount(string phoneNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PaymentAmount", new object[] {
                        phoneNumber}, callback, asyncState);
        }

        /// <remarks/>
        public string EndPaymentAmount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void PaymentAmountAsync(string phoneNumber)
        {
            this.PaymentAmountAsync(phoneNumber, null);
        }

        /// <remarks/>
        public void PaymentAmountAsync(string phoneNumber, object userState)
        {
            if ((this.PaymentAmountOperationCompleted == null))
            {
                this.PaymentAmountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaymentAmountOperationCompleted);
            }
            this.InvokeAsync("PaymentAmount", new object[] {
                        phoneNumber}, this.PaymentAmountOperationCompleted, userState);
        }

        private void OnPaymentAmountOperationCompleted(object arg)
        {
            if ((this.PaymentAmountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaymentAmountCompleted(this, new PaymentAmountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/GetOrderId", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrderId(string orderCode)
        {
            object[] results = this.Invoke("GetOrderId", new object[] {
                        orderCode});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetOrderId(string orderCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetOrderId", new object[] {
                        orderCode}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetOrderId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetOrderIdAsync(string orderCode)
        {
            this.GetOrderIdAsync(orderCode, null);
        }

        /// <remarks/>
        public void GetOrderIdAsync(string orderCode, object userState)
        {
            if ((this.GetOrderIdOperationCompleted == null))
            {
                this.GetOrderIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderIdOperationCompleted);
            }
            this.InvokeAsync("GetOrderId", new object[] {
                        orderCode}, this.GetOrderIdOperationCompleted, userState);
        }

        private void OnGetOrderIdOperationCompleted(object arg)
        {
            if ((this.GetOrderIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderIdCompleted(this, new GetOrderIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/PaymentChecked", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PaymentChecked(int orderNo, decimal Amount)
        {
            object[] results = this.Invoke("PaymentChecked", new object[] {
                        orderNo,
                        Amount});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginPaymentChecked(int orderNo, decimal Amount, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("PaymentChecked", new object[] {
                        orderNo,
                        Amount}, callback, asyncState);
        }

        /// <remarks/>
        public string EndPaymentChecked(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void PaymentCheckedAsync(int orderNo, decimal Amount)
        {
            this.PaymentCheckedAsync(orderNo, Amount, null);
        }

        /// <remarks/>
        public void PaymentCheckedAsync(int orderNo, decimal Amount, object userState)
        {
            if ((this.PaymentCheckedOperationCompleted == null))
            {
                this.PaymentCheckedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPaymentCheckedOperationCompleted);
            }
            this.InvokeAsync("PaymentChecked", new object[] {
                        orderNo,
                        Amount}, this.PaymentCheckedOperationCompleted, userState);
        }

        private void OnPaymentCheckedOperationCompleted(object arg)
        {
            if ((this.PaymentCheckedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PaymentCheckedCompleted(this, new PaymentCheckedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ticket.org/UpdateCustomer", RequestNamespace = "http://ticket.org/", ResponseNamespace = "http://ticket.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCustomer(int customerID, string XMLValue)
        {
            object[] results = this.Invoke("UpdateCustomer", new object[] {
                        customerID,
                        XMLValue});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateCustomer(int customerID, string XMLValue, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateCustomer", new object[] {
                        customerID,
                        XMLValue}, callback, asyncState);
        }

        /// <remarks/>
        public string EndUpdateCustomer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void UpdateCustomerAsync(int customerID, string XMLValue)
        {
            this.UpdateCustomerAsync(customerID, XMLValue, null);
        }

        /// <remarks/>
        public void UpdateCustomerAsync(int customerID, string XMLValue, object userState)
        {
            if ((this.UpdateCustomerOperationCompleted == null))
            {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        customerID,
                        XMLValue}, this.UpdateCustomerOperationCompleted, userState);
        }

        private void OnUpdateCustomerOperationCompleted(object arg)
        {
            if ((this.UpdateCustomerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new UpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void A_Version_WS_XMLSchemaCompletedEventHandler(object sender, A_Version_WS_XMLSchemaCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class A_Version_WS_XMLSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal A_Version_WS_XMLSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void CanCreateNewOrderCompletedEventHandler(object sender, CanCreateNewOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanCreateNewOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CanCreateNewOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void IsUserExistCompletedEventHandler(object sender, IsUserExistCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IsUserExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetClearUsersCompletedEventHandler(object sender, GetClearUsersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClearUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetClearUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void NewTicketsOrderCompletedEventHandler(object sender, NewTicketsOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewTicketsOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal NewTicketsOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetTicketOrderCompletedEventHandler(object sender, GetTicketOrderCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetTicketOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetInsuranceTypeCompletedEventHandler(object sender, GetInsuranceTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInsuranceTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetInsuranceTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetDeliveryTypeCompletedEventHandler(object sender, GetDeliveryTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetDeliveryTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetOperateTypeCompletedEventHandler(object sender, GetOperateTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOperateTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOperateTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetPaymentTypeCompletedEventHandler(object sender, GetPaymentTypeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPaymentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetAirportOrSaleroomsCompletedEventHandler(object sender, GetAirportOrSaleroomsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAirportOrSaleroomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAirportOrSaleroomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetCustomerByPhoneCompletedEventHandler(object sender, GetCustomerByPhoneCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByPhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCustomerByPhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetCustomerByIDCompletedEventHandler(object sender, GetCustomerByIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCustomerByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void NewCustomer2CompletedEventHandler(object sender, NewCustomer2CompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewCustomer2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal NewCustomer2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void NewCustomerCompletedEventHandler(object sender, NewCustomerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal NewCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetVIPcardToUserIDCompletedEventHandler(object sender, GetVIPcardToUserIDCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVIPcardToUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetVIPcardToUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetUserIDToVIPcardCompletedEventHandler(object sender, GetUserIDToVIPcardCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDToVIPcardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUserIDToVIPcardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void InputCustomerQueryCompletedEventHandler(object sender, InputCustomerQueryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InputCustomerQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InputCustomerQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetCustomerQueryCompletedEventHandler(object sender, GetCustomerQueryCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCustomerQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetCustomerByNameCompletedEventHandler(object sender, GetCustomerByNameCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetCustomerByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetOrganizationCustomersCompletedEventHandler(object sender, GetOrganizationCustomersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrganizationCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void AddPassengerCompletedEventHandler(object sender, AddPassengerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPassengerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddPassengerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void PaymentAmountCompletedEventHandler(object sender, PaymentAmountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaymentAmountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PaymentAmountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void GetOrderIdCompletedEventHandler(object sender, GetOrderIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetOrderIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void PaymentCheckedCompletedEventHandler(object sender, PaymentCheckedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PaymentCheckedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal PaymentCheckedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    public delegate void UpdateCustomerCompletedEventHandler(object sender, UpdateCustomerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.1432")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
